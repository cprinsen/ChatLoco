@model ChatLoco.Models.ChatroomModel


@* Many of the divs are empty, this is because they are populated by JS since they represent active users, messages, or chatrooms *@

@if (Model.Errors != null && Model.Errors.Any())
{
    foreach (var error in Model.Errors)
    {
        <p>Error: @error.ErrorMessage</p>
    }
}
else
{
    <div id="ChatContainer" class="container-fluid ">
        @* These inputs are hidden so that we can get their values easily in JS *@
        <input type="hidden" id="ChatName" value="@Model.Chatroom.Name" />
        <input type="hidden" id="Username" value="@Model.UserModel.Username" />
        <input type="hidden" id="User-Id" value="@Model.UserModel.Id" />
        <input type="hidden" id="ParentChatroomName" value="@Model.Chatroom.Name" />

        @* Bootstrap class col-lg-# allow using bootstrap's built in column organization *@
        <div id="OtherChatroomsPaneContainer" class="col-lg-2">
            <br/>
            <button id="ParentChatroomButton" value="@Model.Chatroom.Name" type="button" class="btn btn-primary">@Model.Chatroom.Name</button>

            <div id="SubChatroomsContainer" class="pre-scrollable">
                <ul id="SubChatroomsList">
                    @* This is filled in by JS *@
                </ul>
            </div>

            @if (!Model.Chatroom.IsPrivate)
                {
                <div id="CreateSubChatroomContainer">
                    <form id="CreateSubChatroomForm">
                        Create Chatroom : <input type="text" name="SubChatroomName" />
                        <input type="submit" />
                    </form>

                    @* This hidden container is the pop up dialog used when creating a chatroom *@
                    <div hidden id="SubChatroomDialog" title="Chatroom Creation Information">
                        @* This is filled in by JS *@
                    </div>
                </div>
            }

        </div>

        <div id="MessagesPaneContainer" class="col-lg-8">

            <h1 id="ChatroomName">Chatroom: @Model.Chatroom.Name</h1>

            <div id="MessagesContainer" class="pre-scrollable">
                @* This is filled in by JS *@
            </div>

            <div id="ComposeContainer">
                <form id="ComposeForm">
                    @Model.UserModel.Username : <input type="text" name="ComposedMessage" />
                    <input type="submit" />
                </form>
            </div>
        </div>

        <div id="UsersPaneContainer" class="col-lg-2">
            <h3>Current Users</h3>
            <div id="UsersContainer" class="pre-scrollable">
                @* This is filled in by JS *@
            </div>
        </div>

    </div>
}


@Scripts.Render("~/bundles/chatroom")